// <auto-generated />
using System;
using Belt_Exam.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Belt_Exam.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20240831164408_fithMigration")]
    partial class fithMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Belt_Exam.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RecipyId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipyId");

                    b.HasIndex("UserId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Belt_Exam.Models.Recipy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("Gluten")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Ingredient1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ingredient2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ingredient3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ingredient4")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ingredient5")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Vegitarian")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Recipies");
                });

            modelBuilder.Entity("Belt_Exam.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Belt_Exam.Models.Rating", b =>
                {
                    b.HasOne("Belt_Exam.Models.Recipy", "Recipy")
                        .WithMany("Ratings")
                        .HasForeignKey("RecipyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Belt_Exam.Models.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Belt_Exam.Models.Recipy", b =>
                {
                    b.HasOne("Belt_Exam.Models.User", "Creator")
                        .WithMany("RecipiesCreated")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Belt_Exam.Models.Recipy", b =>
                {
                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("Belt_Exam.Models.User", b =>
                {
                    b.Navigation("Ratings");

                    b.Navigation("RecipiesCreated");
                });
#pragma warning restore 612, 618
        }
    }
}
